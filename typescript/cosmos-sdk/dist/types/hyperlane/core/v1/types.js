'use strict';
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.181.2
//   protoc               unknown
// source: hyperlane/core/v1/types.proto
var __importDefault =
  (this && this.__importDefault) ||
  function (mod) {
    return mod && mod.__esModule ? mod : { default: mod };
  };
Object.defineProperty(exports, '__esModule', { value: true });
exports.Mailbox = exports.protobufPackage = void 0;
/* eslint-disable */
const minimal_1 = __importDefault(require('protobufjs/minimal'));
exports.protobufPackage = 'hyperlane.core.v1';
function createBaseMailbox() {
  return {
    id: '',
    owner: '',
    message_sent: 0,
    message_received: 0,
    default_ism: '',
    default_hook: '',
    required_hook: '',
    local_domain: 0,
  };
}
exports.Mailbox = {
  encode(message, writer = minimal_1.default.Writer.create()) {
    if (message.id !== '') {
      writer.uint32(10).string(message.id);
    }
    if (message.owner !== '') {
      writer.uint32(18).string(message.owner);
    }
    if (message.message_sent !== 0) {
      writer.uint32(24).uint32(message.message_sent);
    }
    if (message.message_received !== 0) {
      writer.uint32(32).uint32(message.message_received);
    }
    if (message.default_ism !== '') {
      writer.uint32(42).string(message.default_ism);
    }
    if (message.default_hook !== '') {
      writer.uint32(66).string(message.default_hook);
    }
    if (message.required_hook !== '') {
      writer.uint32(74).string(message.required_hook);
    }
    if (message.local_domain !== 0) {
      writer.uint32(80).uint32(message.local_domain);
    }
    return writer;
  },
  decode(input, length) {
    const reader =
      input instanceof minimal_1.default.Reader
        ? input
        : minimal_1.default.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseMailbox();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }
          message.id = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }
          message.owner = reader.string();
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }
          message.message_sent = reader.uint32();
          continue;
        case 4:
          if (tag !== 32) {
            break;
          }
          message.message_received = reader.uint32();
          continue;
        case 5:
          if (tag !== 42) {
            break;
          }
          message.default_ism = reader.string();
          continue;
        case 8:
          if (tag !== 66) {
            break;
          }
          message.default_hook = reader.string();
          continue;
        case 9:
          if (tag !== 74) {
            break;
          }
          message.required_hook = reader.string();
          continue;
        case 10:
          if (tag !== 80) {
            break;
          }
          message.local_domain = reader.uint32();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },
  fromJSON(object) {
    return {
      id: isSet(object.id) ? globalThis.String(object.id) : '',
      owner: isSet(object.owner) ? globalThis.String(object.owner) : '',
      message_sent: isSet(object.message_sent)
        ? globalThis.Number(object.message_sent)
        : 0,
      message_received: isSet(object.message_received)
        ? globalThis.Number(object.message_received)
        : 0,
      default_ism: isSet(object.default_ism)
        ? globalThis.String(object.default_ism)
        : '',
      default_hook: isSet(object.default_hook)
        ? globalThis.String(object.default_hook)
        : '',
      required_hook: isSet(object.required_hook)
        ? globalThis.String(object.required_hook)
        : '',
      local_domain: isSet(object.local_domain)
        ? globalThis.Number(object.local_domain)
        : 0,
    };
  },
  toJSON(message) {
    const obj = {};
    if (message.id !== '') {
      obj.id = message.id;
    }
    if (message.owner !== '') {
      obj.owner = message.owner;
    }
    if (message.message_sent !== 0) {
      obj.message_sent = Math.round(message.message_sent);
    }
    if (message.message_received !== 0) {
      obj.message_received = Math.round(message.message_received);
    }
    if (message.default_ism !== '') {
      obj.default_ism = message.default_ism;
    }
    if (message.default_hook !== '') {
      obj.default_hook = message.default_hook;
    }
    if (message.required_hook !== '') {
      obj.required_hook = message.required_hook;
    }
    if (message.local_domain !== 0) {
      obj.local_domain = Math.round(message.local_domain);
    }
    return obj;
  },
  create(base) {
    return exports.Mailbox.fromPartial(
      base !== null && base !== void 0 ? base : {},
    );
  },
  fromPartial(object) {
    var _a, _b, _c, _d, _e, _f, _g, _h;
    const message = createBaseMailbox();
    message.id = (_a = object.id) !== null && _a !== void 0 ? _a : '';
    message.owner = (_b = object.owner) !== null && _b !== void 0 ? _b : '';
    message.message_sent =
      (_c = object.message_sent) !== null && _c !== void 0 ? _c : 0;
    message.message_received =
      (_d = object.message_received) !== null && _d !== void 0 ? _d : 0;
    message.default_ism =
      (_e = object.default_ism) !== null && _e !== void 0 ? _e : '';
    message.default_hook =
      (_f = object.default_hook) !== null && _f !== void 0 ? _f : '';
    message.required_hook =
      (_g = object.required_hook) !== null && _g !== void 0 ? _g : '';
    message.local_domain =
      (_h = object.local_domain) !== null && _h !== void 0 ? _h : 0;
    return message;
  },
};
function isSet(value) {
  return value !== null && value !== undefined;
}
//# sourceMappingURL=types.js.map
